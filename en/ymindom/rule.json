{"content": "<p>A complex page means more bytes to download and it also means slower DOM access in JavaScript. It makes a difference if you loop through 500 or 5000 DOM elements on the page when you want to add an event handler for example.</p><p>A high number of DOM elements can be a symptom that there&rsquo;s something that should be improved with the markup of the page without necessarily removing content. Are you using nested tables for layout purposes? Are you throwing in more <code>&lt;div&gt;</code>s only to fix layout issues? Maybe there&rsquo;s a better and more semantically correct way to do your markup.</p><p>A great help with layouts are the <a href=\"http://developer.yahoo.com/yui/\">YUI CSS utilities</a>: grids.css can help you with the overall layout, fonts.css and reset.css can help you strip away the browser&rsquo;s defaults formatting. This is a chance to start fresh and think about your markup, for example use <code>&lt;div&gt;</code>s only when it makes sense semantically, and not because it renders a new line.</p><p>The number of DOM elements is easy to test, just type in Firebug&rsquo;s console: <code>document.getElementsByTagName('*').length</code></p><p>And how many DOM elements are too many? Check other similar pages that have good markup. For example the <a href=\"http://www.yahoo.com\">Yahoo! Home Page</a> is a pretty busy page and still under 700 elements (HTML tags).</p>", "id": "ymindom", "title": "Reduce the Number of DOM Elements"}