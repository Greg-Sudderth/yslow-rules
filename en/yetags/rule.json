{"content": "<p>Entity tags (ETags) are a mechanism that web servers and browsers use to determine whether the component in the browser&rsquo;s cache matches the one on the origin server. (An &ldquo;entity&rdquo; is another word a &ldquo;component&rdquo;: images, scripts, stylesheets, etc.) ETags were added to provide a mechanism for validating entities that is more flexible than the last-modified date. An ETag is a string that uniquely identifies a specific version of a component. The only format constraints are that the string be quoted. The origin server specifies the component&rsquo;s ETag using the <code>ETag</code> response header.</p><pre><code>HTTP/1.1 200 OKLast-Modified: Tue, 12 Dec 2006 03:03:59 GMTETag: &quot;10c24bc-4ab-457e1c1f&quot;Content-Length: 12195~~Later, if the browser has to validate a component, it uses the `If-None-Match` header to pass the ETag back to the origin server. If the ETags match, a 304 status code is returned reducing the response by 12195 bytes for this example.</code></pre><p>GET /i/yahoo.gif HTTP/1.1Host: us.yimg.comIf-Modified-Since: Tue, 12 Dec 2006 03:03:59 GMTIf-None-Match: &ldquo;10c24bc-4ab-457e1c1f&rdquo;HTTP/1.1 304 Not Modified~~</p><p>The problem with ETags is that they typically are constructed using attributes that make them unique to a specific server hosting a site. ETags won&rsquo;t match when a browser gets the original component from one server and later tries to validate that component on a different server, a situation that is all too common on Web sites that use a cluster of servers to handle requests. By default, both Apache and IIS embed data in the ETag that dramatically reduces the odds of the validity test succeeding on web sites with multiple servers.</p><p>The ETag format for Apache 1.3 and 2.x is <code>inode-size-timestamp</code>. Although a given file may reside in the same directory across multiple servers, and have the same file size, permissions, timestamp, etc., its inode is different from one server to the next.</p><p>IIS 5.0 and 6.0 have a similar issue with ETags. The format for ETags on IIS is <code>Filetimestamp:ChangeNumber</code>. A <code>ChangeNumber</code> is a counter used to track configuration changes to IIS. It&rsquo;s unlikely that the <code>ChangeNumber</code> is the same across all IIS servers behind a web site.</p><p>The end result is ETags generated by Apache and IIS for the exact same component won&rsquo;t match from one server to another. If the ETags don&rsquo;t match, the user doesn&rsquo;t receive the small, fast 304 response that ETags were designed for; instead, they&rsquo;ll get a normal 200 response along with all the data for the component. If you host your web site on just one server, this isn&rsquo;t a problem. But if you have multiple servers hosting your web site, and you&rsquo;re using Apache or IIS with the default ETag configuration, your users are getting slower pages, your servers have a higher load, you&rsquo;re consuming greater bandwidth, and proxies aren&rsquo;t caching your content efficiently. Even if your components have a far future <code>Expires</code> header, a conditional GET request is still made whenever the user hits Reload or Refresh.</p><p>If you&rsquo;re not taking advantage of the flexible validation model that ETags provide, it&rsquo;s better to just remove the ETag altogether. The <code>Last-Modified</code> header validates based on the component&rsquo;s timestamp. And removing the ETag reduces the size of the HTTP headers in both the response and subsequent requests. This <a href=\"http://support.microsoft.com/?id=922733\">Microsoft Support article</a> describes how to remove ETags. In Apache, this is done by simply adding the following line to your Apache configuration file:</p><pre><code> FileETag none</code></pre>", "id": "yetags", "title": "Configure ETags"}