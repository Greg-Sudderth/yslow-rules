{"content": "<p>L&rsquo;\u00e9quipe de <a href=\"http://mail.yahoo.com\">Yahoo! Mail</a> a constat\u00e9 que lors de l&rsquo;utilisation de <code>XMLHttpRequest</code>, POST est mis en \u0153uvre dans les navigateurs comme un processus en deux \u00e9tapes : l&rsquo;envoi des en-t\u00eates puis l&rsquo;envoi de donn\u00e9es. Il est donc pr\u00e9f\u00e9rable d&rsquo;utiliser GET, qui ne prend qu&rsquo;un paquet TCP pour envoyer (sauf si vous avez un grand nombre de cookies). La longueur maximale pour une URL dans IE est 2K, donc si vous envoyez des donn\u00e9es de plus de 2K vous pourriez ne pas \u00eatre en mesure d&rsquo;utiliser GET.</p><p>Un c\u00f4t\u00e9 int\u00e9ressant est que POST sans affichage r\u00e9el de donn\u00e9es se comporte comme GET. Sur la base des sp\u00e9cifications <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\">HTTP</a>, GET est destin\u00e9 \u00e0 r\u00e9cup\u00e9rer des informations. Il serait donc tr\u00e8s judicieux (s\u00e9mantiquement) d&rsquo;utiliser GET lorsque vous r\u00e9cup\u00e9rez des donn\u00e9es, par opposition \u00e0 l&rsquo;envoi de donn\u00e9es \u00e0 stocker c\u00f4t\u00e9 serveur.</p>", "id": "yxhrmethod", "title": "Utiliser GET pour les requ\u00eates Ajax"}