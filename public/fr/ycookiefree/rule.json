{"content": "<p>Lorsque le navigateur envoie une requ\u00eate pour une image statique et envoie un/des cookie(s) avec la demande, le serveur n&rsquo;a pas l&rsquo;utilit\u00e9 de ces cookies. Ils cr\u00e9ent du trafic r\u00e9seau sans raison valable. Vous devez vous assurer que les composants statiques soient demand\u00e9s sans cookies. Cr\u00e9ez un sous-domaine et h\u00e9bergez-y tous vos composants statiques.</p><p>Si votre domaine est <code>www.example.org</code>, vous pouvez h\u00e9berger vos composants statiques sur <code>static.example.org</code>. Toutefois, si vous avez d\u00e9j\u00e0 configur\u00e9 les cookies sur le domaine de premier niveau <code>example.org</code> par opposition \u00e0 <code>www.example.org</code>, alors toutes les demandes vers <code>static.example.org</code> comprendront des cookies. Dans ce cas, vous pouvez acheter un tout nouveau domaine, y h\u00e9berger vos composants statiques et garder ce nom de domaine libre de tout cookie. Yahoo! utilise <code>yimg.com</code>, YouTube utilise <code>ytimg.com</code>, Amazon utilise <code>image-amazon.com</code> et ainsi de suite.</p><p>Un autre avantage de mettre les composants statiques sur un domaine sans cookie est que certains mandataires pourraient refuser de mettre en cache les composants demand\u00e9s avec des cookies. Sur une note li\u00e9e, si vous vous demandez si vous devez utiliser example.org ou www.example.org pour votre page d&rsquo;accueil, envisagez l&rsquo;impact des cookies. Omettre www ne vous laisse pas d&rsquo;autre choix que d&rsquo;\u00e9crire des cookies pour <code>*.example.org</code>. Pour des raisons de performances, il est pr\u00e9f\u00e9rable d&rsquo;utiliser le sous-domaine www et d&rsquo;\u00e9crire les cookies sur ce sous-domaine.</p>", "id": "ycookiefree", "title": "Utiliser des domaines sans cookies pour les composants"}