{"content": "<p>Une page complexe signifie plus d&rsquo;octets \u00e0 t\u00e9l\u00e9charger et aussi un acc\u00e8s au DOM plus lent en JavaScript. Cela fait une diff\u00e9rence si vous parcourez 500 ou 5000 \u00e9l\u00e9ments DOM sur la page lorsque vous souhaitez ajouter un gestionnaire d&rsquo;\u00e9v\u00e9nements par exemple.</p><p>Un nombre \u00e9lev\u00e9 d&rsquo;\u00e9l\u00e9ments DOM peut \u00eatre un sympt\u00f4me qu&rsquo;il ya quelque chose qui devrait \u00eatre am\u00e9lior\u00e9 avec le balisage de la page sans n\u00e9cessairement supprimer du contenu. Utilisez-vous des tableaux imbriqu\u00e9s \u00e0 des fins de mise en page ? Ajoutez-vous plus de balises <code>&lt;div&gt;</code> seulement pour r\u00e9soudre des probl\u00e8mes de mise en page ? Peut-\u00eatre y a t&rsquo;il une meilleure fa\u00e7on, s\u00e9mantiquement plus correcte, de faire votre balisage.</p><p>Les <a href=\"http://developer.yahoo.com/yui/\">YUI CSS utilitaires</a> sont une aide pr\u00e9cieuse pour la mise en page : grids.css peut vous aider pour la disposition g\u00e9n\u00e9rale, fonts.css et reset.css peuvent vous aider \u00e0 red\u00e9finir la mise en forme par d\u00e9faut du navigateur. C&rsquo;est une chance de repartir de z\u00e9ro et de r\u00e9fl\u00e9chir \u00e0 votre balisage, par exemple utilisez des <code>&lt;div&gt;</code> seulement quand c&rsquo;est logique s\u00e9mantiquement et non parce que la balise rend une nouvelle ligne.</p><p>Le nombre d&rsquo;\u00e9l\u00e9ments DOM est facile \u00e0 tester, il suffit de taper dans la console de Firebug : <code>document.getElementsByTagName('*').length</code>.</p><p>Et combien d&rsquo;\u00e9l\u00e9ments DOM sont trop nombreux ? V\u00e9rifiez d&rsquo;autres pages similaires poss\u00e9dant un bon balisage. Par exemple, <a href=\"http://www.yahoo.com\">Yahoo!</a> est une page tr\u00e8s charg\u00e9e et reste pourtant sous la barre des 700 \u00e9l\u00e9ments (balises HTML).</p>", "id": "ymindom", "title": "R\u00e9duire le nombre d\u2019\u00e9l\u00e9ments du DOM"}